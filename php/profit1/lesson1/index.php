<?php

/** 3. В PHP есть функция var_dump($something), которая выводит подробную информацию о значениях и их типах.
 * Попробуйте написать что-нибудь вроде var_dump(2*2);
 * чтобы увидеть, как она работает. Изучите с помощью этой функции следующие выражения.
 */

var_dump(3 / 1); //int 1
var_dump(1 / 3); //float 0.33333333333333
var_dump('20cats' + 40); //int 60. + выполняется приведение типов к числу
var_dump(18 % 4); //int 2 - так как целочисленная операция

/** 4. Говорят, что в PHP "всё является выражением". Интересно, что даже присваивание переменной
 * какого-либо значения тоже является выражением!
 * Изучите примеры ниже и дайте ответ - что же является значением выражения присваивания?
 */

echo ($a = 2); //Ответ: 2
$x = ($y = 12) - 8; echo $x;
//Ответ:4. Последовательность шагов y присваиваем 12, из y вычитаем 8, получаем 4 и значение 4 присваиваем x

/** 5. В PHP имеется логический (boolean) тип, имеющий два значения - true (истина) и false (ложь).
 * Изучите с помощью var_dump() следующие выражения и объясните их
 * (прочитайте предварительно http://fi2.php.net/manual/ru/language.operators.comparison.php ):
 */

var_dump(1 == 1.0); //Ответ:true Пояснение: Т.к не строгое сравнение. Преобразование int(1) идет к float
var_dump(1 === 1.0); //Ответ:false Пояснение: Строгое стравнение
var_dump('02' == 2); //Ответ:true Пояснение: Нестрогое сравнение. Преобразование string('02') идет к int
var_dump('02' === 20); //Ответ:false Пояснение: Строгое сравнение.
var_dump('02' == '2'); //Ответ:true Пояснение: Не строгое сравнение происходит преобразование к int
//string('02') -> int(2) и string('2') -> int(2) int(2)==int(2)

/** 6. *:
 */
$x = true xor true;
var_dump($x); //ответ:true
//Причина в приоритете операций. https://www.php.net/manual/ru/language.operators.precedence.php
//Порядок следующий:
// 1) ($x = true) - поэтому и ответ true
//2) (($x = true) xor true) - ответ false
// $y = (($x = true) xor true);
// var_dump($y); //ответ:false


